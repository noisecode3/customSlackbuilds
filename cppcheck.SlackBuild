#!/bin/bash

# Slackware build script for cppcheck

# Copyright Martin BÃ¥ngens Sweden
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


cd "$(dirname "$0")" ; CWD=$(pwd)

PRGNAM=cppcheck
VERSION=${VERSION:-2.6.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ -n "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf "$PKG"
mkdir -p "$TMP" "$PKG" "$OUTPUT"
cd "$TMP"
rm -rf "$PRGNAM"

if [ "$VERSION" != "git" ]; then
  git clone --depth 1 -b "$VERSION" https://github.com/danmar/cppcheck
  cd "$PRGNAM"
else
  git clone https://github.com/danmar/cppcheck
  cd "$PRGNAM"
  VERSION=$(git describe --tags 2>/dev/null | cut -d'-' -f1-2 | tr '-' . || echo "0.0.0")
fi
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# cherry pick patches
# based on e86abfdc5faee6ab65cfdb5e176023bac1713269
# I just remove it
# No unmatched suppressions list in quiet output.
# When user wants to see only errors printed (--quiet in CLI) we
# must obey that. And not print unmatchedSuppressions list.

# Ticket: #2895 (Cannot suppress unmatchedSuppression reports)
PATCH=$(cat <<'EOINS'
diff --git a/cli/cppcheckexecutor.cpp b/cli/cppcheckexecutor.cpp
index 3cef91f..1201c19 100644
--- a/cli/cppcheckexecutor.cpp
+++ b/cli/cppcheckexecutor.cpp
@@ -973,22 +973,6 @@ int CppCheckExecutor::check_internal(CppCheck& cppcheck, int /*argc*/, const cha

     cppcheck.analyseWholeProgram(mSettings->buildDir, mFiles);

-    if (settings.severity.isEnabled(Severity::information) || settings.checkConfiguration) {
-        const bool enableUnusedFunctionCheck = cppcheck.isUnusedFunctionCheckEnabled();
-
-        if (settings.jointSuppressionReport) {
-            for (std::map<std::string, std::size_t>::const_iterator i = mFiles.begin(); i != mFiles.end(); ++i) {
-                const bool err = reportUnmatchedSuppressions(settings.nomsg.getUnmatchedLocalSuppressions(i->first, enableUnusedFunctionCheck));
-                if (err && returnValue == 0)
-                    returnValue = settings.exitCode;
-            }
-        }
-
-        const bool err = reportUnmatchedSuppressions(settings.nomsg.getUnmatchedGlobalSuppressions(enableUnusedFunctionCheck));
-        if (err && returnValue == 0)
-            returnValue = settings.exitCode;
-    }
-
     if (!settings.checkConfiguration) {
         cppcheck.tooManyConfigsError("",0U);
EOINS
)
echo "$PATCH" | patch -p1 -F 10

mkdir -p build
cd build

export CXXFLAGS="$SLKCFLAGS -DNDEBUG -Wall -Wno-sign-compare -Wno-unused-function"
  cmake \
    -DCMAKE_CXX_FLAGS:STRING="$CXXFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_GUI=OFF \
    -DUSE_MATCHCOMPILER=ON \
    -DHAVE_RULES=ON \
    ..
  make
  make install/strip DESTDIR="$PKG"
cd ..

find "$PKG" -print0 | xargs -0 file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

rm -f "$PKG"/{,usr/}lib${LIBDIRSUFFIX}/*.la

mkdir -p "$PKG/usr/doc/$PRGNAM-$VERSION"
cp -a \
    AUTHORS COPYING readme.{md,txt} \
    "$PKG/usr/doc/$PRGNAM-$VERSION"

cat "$CWD/$PRGNAM.SlackBuild" > "$PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild"

mkdir -p "$PKG/install"

BSPACE=$(printf "%${#PRGNAM}s")
cat <<EOINS >> "$PKG/install/slack-desc"
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.
# Line up the first '|' above the ':' following the base package name, and
# the '|' on the right side marks the last column you can put a character in.
# You must make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':' except on otherwise blank lines.

$BSPACE|-----handy-ruler------------------------------------------------------|
$PRGNAM: $PRGNAM (A tool for static C/C++ code analysis)
$PRGNAM:
$PRGNAM: Cppcheck is a static analysis tool for C/C++ code. Unlike C/C++
$PRGNAM: compilers and many other analysis tools, it doesn't detect syntax
$PRGNAM: errors. Cppcheck only detects the types of bugs that the compilers
$PRGNAM: normally fail to detect. The goal is no false positives.
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
EOINS

cd "$PKG"
/sbin/makepkg -l y -c n "$OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
